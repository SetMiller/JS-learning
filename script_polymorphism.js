'use strict'

// –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –û–û–ü ¬´–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º¬ª –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –æ–∑–Ω–∞—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ: –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã—Ö 
// –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –æ–±–ª–µ–≥—á–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.

// –ü—Ä–∏–º–µ—Ä -> üî•üî•üî•üî•
  // –°–æ–∑–¥–∞–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å
    class Animal {
      constructor(obj){
        this.name = obj.name
        this.age = obj.age
        this.thirst = 100
        this.belly = []
      }
      drink(points){
        this.thirst -= points
        return this.thirst
      }
      eat(food){
        this.belly.push(food)
        return this.belly
      }
    }
  
  // –°–æ–∑–¥–∞–¥–∏–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã
    // –°–æ–∑–¥–∞–¥–∏–º –ø–æ–¥-–∫–ª–∞—Å—Å –ö–æ—Ç–∞
      class Cat extends Animal {
        constructor(obj){
          super(obj)
          this.breed = obj.breed
        }
        talk(){
          return `Me is a ${this.constructor.name} class. My name is '${this.name}' - '${this.breed}', ${this.age} ears old`
        }
        eat(food){
          if (food == 'fish'){
            super.eat(food)
            return this.belly
          } else {
            return `I am not going to eat ${food} !!!!!`
          }
        }
      }
      const cat = new Cat({
        name: 'Meowee',
        age: 2,
        breed: 'Maine coon'
      })

    // –°–æ–∑–¥–∞–¥–∏–º –ø–æ–¥-–∫–ª–∞—Å—Å –°–æ–±–∞–∫–∏  
      class Dog extends Animal {
        constructor(obj){
          super(obj)
          this.breed = obj.breed
        }
        eat(food){
          if (food == 'bone'){
            super.eat(food)
            return this.belly
          } else {
            return `I am not going to eat ${food} !!!!!`
          }
        }
        talk(){
          return `Bark Bark üçñ! '${this.name}' want this bone!!!
Me is a ${this.constructor.name} class. My name is '${this.name}' - '${this.breed}', ${this.age} ears old`
        }
      }

      let animals = []

      for(let i = 0; i < 10; i++) {
        if (Math.random() < 0.5) {
          animals.push(new Cat({
            name: 'Meowee',
            age: 2,
            breed: 'Maine coon'
          }))
        } else {
          animals.push(new Dog({
            name: 'Wolfee',
            age: 4,
            breed: 'King Charles'
          }))
        }
      }

      console.log(animals)
      for(let animal of animals){
        console.log(animal.talk())
      }
      
    // –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤—ã–∑—ã–≤–∞—è –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ –¥–ª—è –≤—Å–µ—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö, –º—ã –ø–æ–ª—É—á–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ
    // —Ç–æ–ª—å–∫–æ –∏–º –æ—Ç–≤–µ—Ç—ã, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–æ–º "–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞"

// *********************** ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è *********************** //