const FUNCTIONS = '—Ç–µ–º–∞ –∏–∑—É—á–µ–Ω–∏—è - –§—É–Ω–∫—Ü–∏–∏'
console.log(`${FUNCTIONS}`);
console.log(`-----------------------------------------------------`);

// üì£ –§—É–Ω–∫—Ü–∏—è - –±–ª–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∏ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æüëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Å–ø–∏—Å–æ–∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞—é—Ç —Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏üëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–≤–æ–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–µ —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ–º
// –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω–æ–≥–æ return, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ undefined).
// üì£ –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–µ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞ - –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–ª—é—á–µ–≤–æ–º —Å–ª–æ–≤–µ thisüî•üî•üî•.
// üì£ –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤—É –æ–±—ä–µ–∫—Ç–∞, –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –æ–±—ä–µ–∫—Ç–∞üëÜ, —Ç–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
// üì£ –§—É–Ω–∫—Ü–∏–∏, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–æ–≤—å —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–∑—ã–≤–∞—é—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏üëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript —è–≤–ª—è—é—Ç—Å—è –∑–∞–º—ã–∫–∞–Ω–∏—è–º–∏.

//1.–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
//üì£ 1Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüî•):
// function name([param,[, param,[..., param]]]) {  [statements]  };
  
  hoisted("hello world");           //üëà –≤—ã–≤–æ–¥–∏–º foo, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ JavaScript –ø–æ–¥–Ω–∏–º–∞–µ—Çüî•üî•üî• –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                                    //üëà –µ–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–æ –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è 
  function hoisted(a) {
    console.log(a);                 
  }                                 //üëà —Ç–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (return), —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è - –ø—Ä–æ—Ü–µ–¥—É—Ä–æ–π 

// 

  function distance(x1, y1, x2, y2) {                         //üëà –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    let dx = x2 - x1;
    let dy = y2 - y1;
    return Number(Math.sqrt(dx * dx + dy * dy).toFixed(2));   //üëÜ –º–µ—Ç–æ–¥ toFixed –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç String
  }                                                           //üëÜ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è

// 

  function fact(x) {                                          //üëà —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–≤—ã–∑—ã–≤—é—â–∞—è —Å–∞–º–∞ —Å–µ–±—è) 
    if (x <= 1) return 1;
    return x * (fact(x - 1));
  }                                                           //üëÜ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
  
//üì£ 2Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –≤—ã—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µüî•):
// var myFunction = function [name]([param1[, param2[, ..., paramN]]]) {  statements  };

  // notHoisted();                    //üëâ TypeError: notHoisted is not a function 

  var notHoisted = function() {       //üëÜ –Ω–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å –¥–æ –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É
     console.log("bar");
  };

// 

  var square = function (x) {
    console.log(arguments[0]);
    return x * x;
  };

  // var square = { 'math': function (x) {  //üëÜ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ —Ç–µ–ª–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –∏–º–µ–Ω–æ–≤–∞–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
  //   return x * x;
  // }};

//üì£ 3Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Function:
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Function —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Function. –í JavaScript –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º Function.
// new Function([arg1[, arg2[, ...argN]],] functionBody)

  var adder = new Function('a', 'b', 'return a + b');   //üëà —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –∏—Ö —Å—É–º–º—É





























let b = {
  x:2,
  math: function() {
    console.log(this);
    return this.x * this.x;
  } 
}
