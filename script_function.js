"use strict"
const FUNCTIONS = '—Ç–µ–º–∞ –∏–∑—É—á–µ–Ω–∏—è - –§—É–Ω–∫—Ü–∏–∏'
console.log(`${FUNCTIONS}`);
console.log(`-----------------------------------------------------`);

// üì£ –§—É–Ω–∫—Ü–∏—è - –±–ª–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∏ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æüëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Å–ø–∏—Å–æ–∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞—é—Ç —Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏üëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–≤–æ–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–µ —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ–º
// –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω–æ–≥–æ return, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ undefined).
// üì£ –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–µ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞ - –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–ª—é—á–µ–≤–æ–º —Å–ª–æ–≤–µ thisüî•üî•üî•.
// üì£ –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤—É –æ–±—ä–µ–∫—Ç–∞, –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –æ–±—ä–µ–∫—Ç–∞üëÜ, —Ç–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
// üì£ –§—É–Ω–∫—Ü–∏–∏, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω–æ–≤—å —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–∑—ã–≤–∞—é—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏üëÜ.
// üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript —è–≤–ª—è—é—Ç—Å—è –∑–∞–º—ã–∫–∞–Ω–∏—è–º–∏.

//1.–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
//üì£ 1Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüî•):
// function name([param,[, param,[..., param]]]) {  [statements]  };
  
  hoisted("hello world");           //üëà –≤—ã–≤–æ–¥–∏–º foo, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ JavaScript –ø–æ–¥–Ω–∏–º–∞–µ—Çüî•üî•üî• –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                                    //üëà –µ–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–æ –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è 
  function hoisted(a) {
    console.log(a);
    console.log(this);            
  }                                 //üëà —Ç–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (return), —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è - –ø—Ä–æ—Ü–µ–¥—É—Ä–æ–π 

// 

  function distance(x1, y1, x2, y2) {                         //üëà –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    let dx = x2 - x1;
    let dy = y2 - y1;
    return Number(Math.sqrt(dx * dx + dy * dy).toFixed(2));   //üëÜ –º–µ—Ç–æ–¥ toFixed –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç String
  }                                                           //üëÜ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è

// 

  function fact(x) {                                          //üëà —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–≤—ã–∑—ã–≤—é—â–∞—è —Å–∞–º–∞ —Å–µ–±—è) 
    if (x <= 1) return 1;
    return x * (fact(x - 1));
  }                                                           //üëÜ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è

  // (function () {                                              //üëà —Å–∞–º–æ–≤—ã–∑—ã–≤–∞—é—â–∞—è—Å—è –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  //   var a = v = 4;                                            //üëà –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–∞" –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ func() –∏ "v" –≤ 
  //                                                             //  –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ Window, –≤ —Ä–µ–∂–∏–º–µ "use strict" -> true –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ "v" is not defined
  //   console.log(a);                                           //üëà "–∞" => 4 (local scope)
  //   console.log(v);                                           //üëà "v" => 4 (global scope)
  // }());
  // // console.log(a);                                          //üëà "–∞" => "a" is not defined (function () local scope)
  // console.log(v);                                             //üëà "v" => 4 || Window.v => 4
  
  
//üì£ 2Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –≤—ã—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µüî•):
// var myFunction = function [name]([param1[, param2[, ..., paramN]]]) {  statements  };

  // notHoisted();                    //üëâ TypeError: notHoisted is not a function 

  var notHoisted = function() {       //üëÜ –Ω–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å –¥–æ –µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É
     console.log("bar");
     console.log(this);               //üëÜthis => undefined
  };

// 

  var square = function (x) {
    console.log(arguments[0]);
    return x * x;
  };

  // var square = { 'math': function (x) {  //üëÜ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ —Ç–µ–ª–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –∏–º–µ–Ω–æ–≤–∞–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
  //   return x * x;
  // }};

//üì£ 3Ô∏è‚É£ –° –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Function:
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Function —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Function. –í JavaScript –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º Function.
// new Function([arg1[, arg2[, ...argN]],] functionBody)

  var adder = new Function('a', 'b', 'return a + b');   //üëà —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –∏—Ö —Å—É–º–º—É

//üì£ 4Ô∏è‚É£ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// JavaScript –¥–æ–ø—É—Å–∫–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–π –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

  function hypotenise(a, b) {
    console.log(`hypotenise this: ${this}`);            //üëà –∫–æ–Ω—Ç–µ–∫—Å—Ç => [object Window]
    function square2(x) {
      console.log(`square2 this: ${this}`);             //üëà –∫–æ–Ω—Ç–µ–∫—Å—Ç => [object Window]
      return x * x;
    }
    return Number(Math.sqrt(square2(a) + square2(b)).toFixed(2));
  }


//2.–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
//üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ —è–∑—ã–∫–µ JavaScript –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —á–µ—Ç—ã—Ä–µ–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:
// 1. -> –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏(–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –≤—ã—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏);
// 2. -> –∫–∞–∫ –º–µ—Ç–æ–¥—ã;
// 3. -> –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä;
// 4. -> –∫–æ—Å–≤–µ–Ω–Ω–æ, —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–æ–≤ call() –∏ apply();

//üì£ 1Ô∏è‚É£ –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
// –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞ f(o) (1. –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ñ—É–Ω–∫—Ü–∏–∏; 2. —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–∑ –Ω—É–ª—è –∏ –±–æ–ª–µ–µ
// –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ —Å–∫–æ–±–æ–∫ –∑–∞–ø—è—Ç—ã–º–∏)
// –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ ECMAScript 3 –∏ –≤ –Ω–µ—Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ ECMAScript 5 –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞ (–∑–Ω–∞—á–µ–Ω–∏–µ–º this) —è–≤–ª—è–µ—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç.
// –û–¥–Ω–∞–∫–æ –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞ —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ undefined
  
  function printprops(o) {                                    //üëà –í—ã–≤–æ–¥–∏–º —Å–≤–æ–π—Å—Ç–≤–∞ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ –æ–±—ä–µ–∫—Ç–∞
    for (var prop in o) {
        if (!o.hasOwnProperty(prop)) continue;                //üëà –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –Ω–∞—Å–ª–µ–¥—É–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∏ –º–µ—Ç–æ–¥–æ–≤üíé
        if (typeof o[prop] === 'function') continue;          //üëà –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—éüî•üî•üî• üëâ—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –Ω–∞—Å–ª–µ–¥—É–µ–º—ã—Öüëà –º–µ—Ç–æ–¥–æ–≤üíé
        console.log(`${prop} : ${o[prop]}`);
  }};

  printprops({x: 1, y:2});  
  var total = distance(0, 0, 2, 1) + distance(2, 1, 3, 5);
  var probability = fact(3)/ fact(13);

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—è–≤–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã.

  let strict = (function () { return console.log(`"use strict" : ${!this}`); }());        //üëà => false/true

//üì£ 2Ô∏è‚É£ –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤
// –í—ã—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ñ—É–Ω–∫—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Å–≤–æ–π—Å—Ç–≤—É, –∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –º–µ—Ç–æ–¥
// –í –ø–æ–¥–æ–±–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–æ–≤ –æ–±—ä–µ–∫—Ç "o" —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞, –∏ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∞—Ç—å—Å—è
// –Ω–∞ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ this

  let o = {
    x: 20,
    y: 30,
    f: function() {
      console.log(this);                        //üëà this => o üî•üî•üî•
      return this.x + this.y;                   //üëà this.x + this.y => o.x + o.y üî•üî•üî•
      },
    f2: function(a, b) {
      console.log(this);
      return a + b;
      },
    calc: function() {
      console.log(this);
      this.result = this.x * this.y;            //üëà result –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–≤–æ–π—Å—Ç–≤–∞ "o" —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ calc()üî•üî•üî•
      },
  };

  console.log(o.f());                           //üëà –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞ "o" => 50
// o["f"]()                                     //üëÜ –≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ => 50
  let x = 10, y = 20;
  console.log(o.f2(x, y));                      //üëà –º–µ—Ç–æ–¥ f2() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ => 30
// o["f2"](x, y)                                //üëÜ –≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ => 30

//  –û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–ø–æ—Å–æ–± –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–∑–æ–≤–∞
  
  // console.log(o.calc());                        //üëà –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥, —á—Ç–æ–±—ã –≤—ã—á–∏—Å–ª–∏—Ç—å x * y üëÜ => return undefined o.result = 600
  console.log(o.result);                        //üëà => return 600

// –ï—Å–ª–∏ –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é "this" –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏, —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–µ–¥—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π,
// –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏. –î–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ —á–∞—Å—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–º–µ–Ω–µ–º "self"

  let o2 = {
    m: function() {
      let self = this;
      console.log(this === o2);                 //üëà => true
      f();
      function f() {
        console.log(this === o2);               //üëà => false
        console.log(this === undefined);        //üëà => true
        console.log(self === o2);               //üëà => true
      };
    },
  };

  o2.m();


//üì£ 3Ô∏è‚É£ –í—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤
// –ï—Å–ª–∏ –≤—ã–∑–æ–≤—É —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –º–µ—Ç–æ–¥–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ new, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —ç—Ç–æ –≤—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
// –í—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≤—ã–∑–æ–≤–∞ –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –º–µ—Ç–æ–¥–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤,
// –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤—ã–∑–æ–≤–∞ üî•üî•üî• –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
// –ù–∞—Å–ª–µ–¥—É–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ —Ü–µ–ø–æ—á–∫—É –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–∞ Function.prototype.

  let mult = new Function('a', 'b', 'return a * b');    //üëà –ø–æ–¥–æ–±–Ω–æ –ª–∏—Ç–µ—Ä–∞–ª–∞–º {} => —Å–æ–∑–¥–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é

  mult(2, 3);                                           //üëà => 6

// –í–ê–ñ–ù–û üî•üî•üî•
// –ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ª–µ–∫—Å–∏—á–µ—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ ->
// —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ –∫–æ–º–ø–∏–ª–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ üëáüëáüëá

  let scope2 = "global";
  function constructFunction() {
    let scope2 = "local";
    return new Function('return scope2');               //üëà scope2 => "global"
  };

// –í–ê–ñ–ù–û üî•üî•üî•
// –ó–∞–º—ã–∫–∞–Ω–∏–µ

  let scope3 = "global";
  function constructFunction() {
    let scope3 = "local";
    function f(){return scope3};                        //üëà scope3 => "local"
    return f();
  };
console.clear();

//3.–ê—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
//üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ —è–∑—ã–∫–µ JavaScript –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–π –Ω–µ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–∏–ø—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö
// –∑–Ω–∞—á–µ–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

//üì£ 1Ô∏è‚É£ –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
// –ö–æ–≥–¥–∞ —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—å—à–µ —á–∏—Å–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ undefined
// –ß–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç —É–¥–æ–±–Ω–æ üî• –ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏ –º–æ–≥–ª–∏ –æ–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// –í–ê–ñ–ù–û üî•üî•üî•
// –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –∑–∞–≤–µ—Ä—à–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –∏—Ö –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–ø—É—Å—Ç–∏—Ç—å

  function getPropertyNames (o, /* –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π */ a) {
    // if (a === undefined) a = [];                   //üëà –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω => —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤
    a = a || [];                                      //üëà –≤–º–µ—Å—Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ "if" –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä "||" —Å–ª–µ–¥. –æ–±—Ä–∞–∑–æ–º
    for (var prop in o) a.push(prop);                 //üëà –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –º–∞—Å—Å–∏–≤
    return a;                                         //üëà –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤
  };

  let a = getPropertyNames(o);                        //üëà –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ "o" –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ "a"
  getPropertyNames(o2, a);                            //üëà –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ "o2" –≤ –º–∞—Å—Å–∏–≤ "a"

//üì£ 2Ô∏è‚É£ –°–ø–∏—Å–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
// –ï—Å–ª–∏ —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ –≤—ã–∑–æ–≤–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —á–∏—Å–ª–æ –∏–º–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, —Ñ—É–Ω–∫—Ü–∏—è –ª–∏—à–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–ø—Ä—è–º—É—é –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º
// –∑–Ω–∞—á–µ–Ω–∏—è–º. –†–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç Argumentsüî•
// Arguments - —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –ø–æ–¥–æ–±–Ω—ã–π –º–∞—Å—Å–∏–≤—É, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–≤–ª–µ–∫–∞—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∏—Ö –Ω–æ–º–µ—Ä–∞–º, –∞ –Ω–µ –ø–æ –∏–º–µ–Ω–∞–º

  function f(x, y, z) {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –ø—Ä–∞–≤–ª—å–Ω–æ–µ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥–∞–Ω–æ
    if (arguments.length != 3) {
      throw new Error (`—Ñ—É–Ω–∫—Ü–∏—è f() –≤—ã–∑–≤–∞–Ω–∞ —Å ${arguments.length} –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, –∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è 3`);
    }
    // –ê —Ç–µ–ø–µ—Ä—å —Å–∞–º –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏
  }

// –û–±—ä–µ–∫—Ç Arguments –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–∂–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å JavaScript-—Ñ—É–Ω–∫—Ü–∏–π: –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç—ã—Ç—å
// —Å –ª—é–±—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

  function max() {
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∏–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å
    console.log(arguments.length);
    let max = arguments[0];
    // –¶–∏–∫–ª –ø–æ –≤—Å–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º, –ø–æ–∏—Å–∫ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –∏–∑ –Ω–∏—Ö
    for (var i = 0; i < arguments.length; i++) {
      if (max < arguments[i]) max = arguments[i];
    }
    // –í–µ–Ω–Ω—É—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    return max;
  }

  var largest = max(1.2, 10, 100, 2, 3, 1000, 4, 5, 10000.44, 6);

// –í–ê–ñ–ù–û üî•üî•üî• 
// –í –Ω–µ—Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ, –º–∞—Å—Å–∏–≤ arguments[] –∏ –∏–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ - —ç—Ç–æ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –æ–¥–Ω–∏–º –∏ —Ç–µ–º–∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
// –ò–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –∏–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∏–∑–≤–ª–µ–∫–∞–µ–º–æ–µ arguments[] –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.
// –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —ç—Ç–æ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É—é —Ä–µ–∂–∏–º "use strict"

  function f2(x) {            // f2(3);
    // üí© –≤ —Ä–µ–∂–∏–º–µ "use strict" -> false
    console.log(x);           // x -> 3
    arguments[0] = null;      // x = null
    console.log(x);           // x -> null
  }
  
//üì£ 3Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–º–µ–µ—Ç –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ —Ç—Ä—É–¥–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∏—Ö —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏
// –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ –≤–∏–¥–µ –ø–∞—Ä –∏–º—è/–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
// –æ–±—ä–µ–∫—Ç–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞

  function arrayCopy(/*–º–∞—Å—Å–∏–≤*/ from, /*–∏–Ω–¥–µ–∫—Å*/ from_start,      //üëà –∑–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –¥–æ–≤–æ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–æ
                     /*–º–∞—Å—Å–∏–≤*/ to,   /*–∏–Ω–¥–µ–∫—Å*/ to_start,
                     /*—Ü–µ–ª–æ–µ*/  length){
  /*—Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏*/
  };

  function easyCopy(args) {arrayCopy(args.from, args.from_start || 0,
                                     args.to,   args.to_start || 0,
                                     args.length)
  /*—Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏*/                                  
  };
  
  // –¥–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ easyCope();
  let aa = [1, 2, 3, 4], bb = [];
  easyCopy({from: aa, to: bb, length: 4});

//üì£ 4Ô∏è‚É£ –¢–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω—ã –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —á–∞—â–µ, —á–µ–º –æ–¥–∏–Ω-–¥–≤–∞ —Ä–∞–∑–∞, —Å–ª–µ–¥—É–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–∏–ø–æ–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

// –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º–∏, –ø—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏—è null –∏ undefined –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è
  function sum(a) {
    if (Array.isArray(a)) {
      let total = 0;
      for (let i = 0; i < a.length; i++) {
        let element = a[i];
        if (element == null) continue;
        if (isFinite(element)) total += element;
        else throw new Error ('sum(): –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏');
      }
      return total;
    }
    else throw new Error ('sum(): –∞—Ä–≥—É–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
  };

// –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–µ —á–∏—Å–ª–æ –≤—Ö–æ–¥–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ –∏—Ö –Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–∞–º–∏
  function flexSum(a) {
    let total = 0;
    for (let i = 0; i < arguments.length; i++) {
      let element = arguments[i], n;
      if (element == null) continue;
      if (Array.isArray(element))
        n = flexSum.apply(this, element);
      else if (typeof element == 'function')
        n = Number(element());
      else n = Number(element);
      if (isNaN(n))
        throw Error (`flexSum(): –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ${element} –≤ —á–∏—Å–ª–æ`);
      total += n;
    }
    return total;
  }

  // –í–ê–ñ–ù–û üî•üî•üî•  
  let aaa = [1, 2, [1, 2], 4];        //üëà flexSum(aaa) -> 10; sum(aaa) -> Error: sum(): –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏
  let aaaa = [1, 2, [1, 2],{}, 4];    //üëà flexSum(aaa) -> Error: flexSum(): –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å [object Object] –≤ —á–∏—Å–ª–æ

console.clear();
//4.–§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ
//üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ —è–∑—ã–∫–µ JavaScript - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –Ω–æ –∏ –¥–∞–Ω–Ω—ã–µ, –∞ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É 
// 1Ô∏è‚É£–ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º, 2Ô∏è‚É£—Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–º–µ—Ç–æ–¥—ã) –∏–ª–∏ 3Ô∏è‚É£—ç–ª–µ–º–µ–Ω—Ç–∞—Ö –º–∞—Å—Å–∏–≤–æ–≤, 4Ô∏è‚É£–ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏—è–º –∏ —Ç.–¥.

//üì£ 1Ô∏è‚É£ –ü—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º

  function squareOne(x) { return x * x};
  let s = squareOne;                        //üëà –í–ê–ñ–ù–û üî•üî•üî• –ë–ï–ó –°–ö–û–ë–û–ö, –∏–Ω–∞—á–µ -> let s = squareOne() -> TypeError: s is not a function
  
  console.log(squareOne(3));
  console.log(s(3));

//üì£ 2Ô∏è‚É£ –•—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –æ–±—ä–µ–∫—Ç–æ–≤

  let obj = {
    square: function(x){return x * x},
  };
  let j = obj.square(4);
  
  console.log(obj.square(4));
  console.log(j);

//üì£ 3Ô∏è‚É£ –•—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö –º–∞—Å—Å–∏–≤–æ–≤ –≤ –±–µ–∑—ã–º—è–Ω–Ω–æ–º –≤–∏–¥–µüî•

let arr = [function(x){return x * x}, 20];

console.log(arr[0](arr[1]));                //üëà –í–ê–ñ–ù–û üî•üî•üî• -> –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–∑–æ–≤–∞
console.log(arr[0](obj.square(4)));         //üëà –í–ê–ñ–ù–û üî•üî•üî• -> –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–∑–æ–≤–∞

//üì£ 4Ô∏è‚É£ A—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–π (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –¥–∞–Ω–Ω—ã—Ö) –≤–∞—Ä –≤—ã—à–µ üòÑ

  function add(x, y) { return x + y };
  function substract (x, y) { return x - y };
  function multiply (x, y) { return x * y };
  function divide (x, y) { return x / y };

// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –µ–µ —Å –¥–≤—É–º—è –æ–ø–µ—Ä–∞–Ω–¥–∞–º–∏üî•üî•üî•
  function haveFun(operate, operand1, operand2) {
    console.log(typeof operate);
    return operate(operand1, operand2);
  };

  let fun = haveFun(add, haveFun(add, 2, 3), haveFun(multiply, 4, 5));

// –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–Ω–æ–≤–∞, –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Å –ø–æ–º–æ—â—å—é –ª–∏—Ç–µ—Ä–∞–ª–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –ª–∏—Ç–µ—Ä–∞–ª–∞ –æ–±—ä–µ–∫—Ç–∞ üî•üî•
  let operatorsObj = {
      add:        function add(x, y) { return x + y },
      substract:  function substract (x, y) { return x - y },
      multiply:   function multiply (x, y) { return x * y },
      divide:     function divide (x, y) { return x / y },
      pow: Math.pow                                         //üëà –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–∂–µ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  }

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –æ—Ç—ã—Å–∫–∏–≤–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ –æ–±—ä–µ–∫—Ç–µ, –∞ –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –æ–ø–µ—Ä–∞–Ω–¥–æ–º
  function haveFun2 (operatorsObj, operation, operand1, operand2){
    if (typeof operatorsObj[operation] === "function")
      return operatorsObj[operation](operand1, operand2);
    else throw "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä";
  }


// –í–ê–ñ–ù–û üî•üî•üî• –≤ –ø—Ä–∏–º–µ—Ä–µ –Ω–∏–∂–µ –∏–º–µ–Ω–∞ —Å–≤–æ–π—Å—Ç–≤ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ "String" –∏–Ω–∞—á–µ undefinedüî•üî•üî•
  let fun2 = haveFun2(operatorsObj, "add", haveFun2(operatorsObj, "add", 2, 3), haveFun2(operatorsObj, "multiply", 4, 5));    

// –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ("hello" + " " + "world")
  let jj = haveFun2(operatorsObj, "add", "hello", haveFun2(operatorsObj, "add", " ", "world"));       //üëà -> "hello world"
  console.log(jj);
  let kk = haveFun2(operatorsObj, "pow", 10, 2);
  console.log(kk);
console.clear();

//4.1 –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ —Ñ—É–Ω–∫—Ü–∏–∏
//üì£ –§—É–Ω–∫—Ü–∏–∏ –≤ JS —è–≤–ª—è—é—Ç—Å—è –Ω–µ –ø—Ä–æ—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∞ –æ—Å–æ—å–æ–π —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç—å—é –æ–±—ä–µ–∫—Ç–æ–≤, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞.
//üì£ –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –¥–æ–ª–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏, —É–¥–æ–±–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –µ–µ –≤
// —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–Ω–∏–º–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ counter –æ–±—ä–µ–∫—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
  // –û–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è –≤–≤–µ—Ä—Ö, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
  uniqueInteger.counter = 0;

  // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ
  // –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Ç–≤–æ
  function uniqueInteger() {
    return console.log(uniqueInteger.counter++)
  }

  // –ü—Ä–∏–º–µ—Ä —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ 
  // –í—ã—á–∏—Å–ª—è–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞—Ö
  function factorial(x) {                                                 //üëà —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–≤—ã–∑—ã–≤—é—â–∞—è —Å–∞–º–∞ —Å–µ–±—è) 
    if (isFinite(x) && x > 0 && x == Math.round(x)){
      if (!(x in factorial)) {
        if (x <= 1) return 1;
          factorial[x] = x * (factorial(x - 1));                          //üëà –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "x" —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        return factorial[x];
      }
    }
    else return NaN;
  }  

//5 –§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º–µ–Ω
//üì£ –ò–¥–µ—è —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø–æ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥ –º–æ–¥—É–ª—è –≤ —Ñ—É–Ω–∫—Ü–∏—é –∏ –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é.
// –ü—Ä–∏ —Ç–∞–∫–æ–º –ø–æ–¥—Ö–æ–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–≤—Ä–∞—Ç—è—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

  function myModule() {
    // –∑–¥–µ—Å—å –ª—é–±—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–µ–≤—Ä–∞—Ç—è—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ
    let a = 4;
    return console.log(`a = ${a}`);
  }
  myModule();                                    //üëà –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

// –ï—Å–ª–∏ –¥–∞–∂–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–º—è —ç—Ç–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ –≤—ã–∑–≤–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –æ–¥–Ω–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–∏

  (function(){
    let a = 4;
    return console.log(`a = ${a}`);
  }())

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º–µ–Ω
  
  let extend = (function() {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏, –ø—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –µ–µ
    for (let p in {toString:null}) {
      // –ï—Å–ª–∏ –æ–∫–∞–∑–∞–ª–∏—Å—å –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç —Ü–∏–∫–ª for/in —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
      // –∏ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é —Ñ—É–Ω–∫—Ü–∏–∏ extend()
      return function extend(o) {
        for (let i = 0; i < arguments.length; i++) {
          let source = arguments[i];
          // –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
          for (let property in source)
            o[property] = source[property];
        }
        return o;
      };
    }
    // –ï—Å–ª–∏ –º—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –∑–¥–µ—Å—å, —Ç–æ —Ü–∏–∫–ª for/in –Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏–ª —Å–≤–æ–π—Ç—Å–≤–æ toString —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    // –ü–æ—ç—Ç–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Ä–Ω—É—Ç—å –≤–µ—Ä—Å–∏—é extend(), –∫–æ—Ç–æ—Ä–∞—è —è–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–ø–µ—Ä–µ—á–∏—Å–ª–∏–º–æ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ Object.prototype
    // –°–ø–∏—Å–æ–∫ —Å–≤–æ–π—Å—Ç–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    let protoprops = ["toString", "valueOf", "constructor", "hasOwnProperty", 
                      "isPrototypeOf", "propertyIsEnumerable", "toLocaleString"];
    return function patched_extend(o) {
      for (let i = 0; i < arguments.length; i++) {
        let source = arguments[i];
        // –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        for (let property in source)
            o[property] = source[property];
        for (let j = 0; j< protoprops.length; j++) {
          prop = protoprops[j];
          if (source.hasOwnProperty(prop)) {
            o[prop] = source[prop]
          };
        }
      }
      return o;
    }
  }()); 
console.clear();

//6 –ó–∞–º—ã–∫–∞–Ω–∏—èüî•üî•üî•
//üì£ A closure is an inner function that has access to the outer (enclosing) function‚Äôs variables‚Äîscope chainüî•. 
// The closure has three scope chains: 1Ô∏è‚É£it has access to its own scope (variables defined between its curly brackets), 
// 2Ô∏è‚É£it has access to the outer function‚Äôs variables, and 3Ô∏è‚É£it has access to the global variables.

  // –ü—Ä–∏–º–µ—Ä 1.
  let scopeClosure = "global scope";
  function checkScope() {
    let scopeClosure = "local scope";
    function ff(){return console.log(`scopeClosure = ${scopeClosure}`)}
    return ff;
  }
  // 1 –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–∑–æ–≤–∞ –∑–∞–º–∫–Ω—É—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  checkScope()();                                 //üëà —Ç–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Ç–æ—Ä–∞—è –±–µ–∑—ã–º—è–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  // 2 –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–∑–æ–≤–∞ –∑–∞–º–∫–Ω—É—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  let newCheckScope = checkScope();       
  newCheckScope();

  // –ü—Ä–∏–º–µ—Ä 2.
  function makeGreeting(){
    let myName = 'Alex';
    function greeting(personName){
      return console.log(`Hello, ${personName}! My name's ${myName}.`);
    };
    return greeting;
  }
  // 1 –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–∑–æ–≤–∞ –∑–∞–º–∫–Ω—É—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  makeGreeting()('Dave');        //üëà —Ç–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Ç–æ—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è greeting() —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º greeting('Dave');
  // 2 –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–∑–æ–≤–∞ –∑–∞–º–∫–Ω—É—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  let newGreeting = makeGreeting();
  newGreeting("Dave");

  // –í–ê–ñ–ù–û üî•üî•üî• SCOPE -> –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ CLOSURE -> –∑–∞–º—ã–∫–∞–Ω–∏–µ
  let abc = 123;
  function foo1() {
    let abc = 234;
    function foo2() {
      // let abc = 345;                                 //üëà –≤–µ—Ä–Ω–µ—Ç abc = 345
      return console.log(`abc foo2() = ${abc}`);
    }
    foo2();                                             //üëà –≤–µ—Ä–Ω–µ—Ç abc = 234
    return console.log(`abc foo1() = ${abc}`);
  }
  foo1();                                               //üëà –≤–µ—Ä–Ω–µ—Ç abc = 123
  console.log(`abc global = ${abc}`);

  //üì£ –ó–∞–º—ã–∫–∞–Ω–∏—è –∑–∞–ø–∏—Ä–∞—é—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–∫—Ç–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  // –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
  // –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ uniqueInteger() —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–º—ã–∫–∞–Ω–∏—è
  let uniqueIntegerClosure = (function(){               //üëà –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤
                                let counter = 0;        //üëà –ß–∞—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∏–∂–µ
                                function hello() {
                                  return counter++;
                                }
                                return hello;
                              }());


 //üì£ –°–∫—Ä—ã—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ counter, –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è,
 // –≤ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤–ø–æ–ª–Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–≤–µ –∏–ª–∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç
 // —Å–æ–≤–º–µ—Å—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω—É —Ü–µ–ø–æ—á–∫—É –æ–±–ª–∞—Å—Ç–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
 function counter() {                                //üëà –æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç -> counter(n)
   let n = 0;                                        //üëà –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ —Ñ—É–Ω–∫—Ü–∏—é -> //  let n = 0;
   return {
     count: function() { return n++},
     reset: function() { n = 0 },
   };
 }; 

 let c = counter();                                   //üëà –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è -> let c = counter(10); 
 let d = counter();                                   //üëà –°–ø–æ—Å–æ–± –≤—ã–∑–æ–≤–∞ üî•üî•üî•
 d.count();                                           //üëà -> 0
 d.count();                                           //üëà -> 1
 d.reset();                                           //üëà -> 0

//üì£ –í–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ counter() —è–≤–ª—è–µ—Ç—Å—è –≤–∞—Ä–∏–∞—Ü–∏–µ–π –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ 6.6, –Ω–æ –∑–¥–µ—Å—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
// —Å–∫—Ä—ã—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–∞–º—ã–∫–∞–Ω–∏—è
// –í–ê–ñ–ù–û üî•üî•üî• —ç—Ç–∞ –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –æ–±—ä—è–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä
// "n", –¥–æ—Å—Ç—É–ø–Ω—ã–π –æ–±–æ–∏–º –º–µ—Ç–æ–¥–∞–º –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤—É. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–µ, –≤—ã–∑—ã–≤–∞—é—â–µ–π counterUpdate(n), –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å
// –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. 
function counterUpdate(n) {
  return {
    get count() { return n++ },
    set count(m) {
      if (m > n) n = m;
      else throw Error('–∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–µ–ª—å–∑—è —É–º–µ–Ω—å—à–∏—Ç—å');
    },
  };
};

let cc = counterUpdate(5);                            //üëà –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è 
let dd = counterUpdate(2);                            //üëà –í—ã–∑–æ–≤ d.count; d.count = 2;üî•üî•üî• <- –±–µ–∑ —Å–∫–æ–±–æ–∫ !!!!
dd.count;                                             //üëà -> 2
dd.count;                                             //üëà -> 3
// dd.count = 2;                                      //üëà -> Error: –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–µ–ª—å–∑—è —É–º–µ–Ω—å—à–∏—Ç—å
console.clear();

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–µ–º–∞ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∫—Ä—ã—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∑–∞–º—ã–∫–∞–Ω–∏—è—Ö
//üì£ –ü—Ä–∏–º–µ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é addPrivateProperty(), –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –¥–≤–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
// –û–Ω–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –º–µ—Ç–æ–¥—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –æ–±—ä–µ–∫—Ç
  function addPrivateProperty(o, name, predicate) {
    // –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
    let value;
    // –ú–µ—Ç–æ–¥ —á—Ç–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
    o["get" + name] = function() {return value;};      //üëà 3Ô∏è‚É£ –í—ã–∑–æ–≤ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫—Ä—ã—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (Closure var)
    // –ú–µ—Ç–æ–¥ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –≤–æ–∑–±—É–∂–¥–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ä–≥–∞–µ—Ç —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
    o["set" + name] = function(v) {                    //üëà 1Ô∏è‚É£ –ü–µ—Ä–µ–¥–∞—á–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ -> obj1.setname("Frank");
      if (predicate && !predicate(v)) 
        throw Error(`Object[set${name}](): –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ -> "${v}", –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "string"!!!`);
      else
        value = v;                                    //üëà 2Ô∏è‚É£ –ó–∞–ø–∏—Å—å –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–∫—Ä—ã—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (Closure var)
    };
  };

  let obj1 = {};
  addPrivateProperty(obj1, "name", function(x) {return typeof x == 'string';});
  obj1.setname("Frank");
  obj1.getname();


// –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏ –æ—à–∏–±–æ—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–º—ã–∫–∞–Ω–∏—è

// 1. –≤–∞—Ä–∏–∞–Ω—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω–æüòÑ)
// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä—â–∞—â–∞–µ—Ç "v"
function constFunc(v) { return function() {return v}};
// —Å–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Ñ—É–Ω–∫—Ü–∏–π-–∫–æ–Ω—Å—Ç–∞–Ω—Ç
let funcs = [];
for(let i = 0; i < 10; i++) {                         //–ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ funcs = [∆í, ∆í, ∆í, ∆í, ∆í, ∆í, ∆í, ∆í, ∆í, ∆í]
  funcs[i] = constFunc(i);                            //–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ funcs[i] = i –∏ –≤—ã–∑–æ–≤ funcs[5]
};
// —Ñ—É–Ω–∫—Ü–∏—è –≤ —ç–ª–µ–º–µ–Ω—Ç–µ –º–∞—Å—Å–∏–≤–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º 5 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 5
funcs[5]();                                           //üëà -> 5

// 2. –≤–∞—Ä–∏–∞–Ω—Ç (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æüòî) –ù–ï –í–ò–ñ–£ –†–ê–ó–ù–ò–¶–´ –í –†–ï–ó–£–õ–¨–¢–ê–¢–ê–•üêôüêô
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è 0-9
function constFuncs() {
  let funcs2 = [];
  for(let i = 0; i < 10; i++) {
    funcs2[i] = function() {return i};
  }
  return funcs2;
};
let funcs2 = constFuncs();
funcs2[5]();                                          //üëà -> 5

// –í–ê–ñ–ù–û üî•üî•üî• -> "this"
// –ß—Ç–æ–±—ã –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é "this" –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏, —Å–ª–µ–¥—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ "this"
// –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
function makeGreeting2(){
  let myName = 'Alex';
  let selfThis = this;
  function greeting(personName){
    return console.log(`Hello, ${personName}! My name's ${myName}.`);
  };
  return greeting;
}

// –í–ê–ñ–ù–û üî•üî•üî• -> "arguments"
// –ü–æ—Å–∫–æ–ª—å–∫—É –∑–∞–º—ã–∫–∞–Ω–∏—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –ø–æ–ª—É—á–∞—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç "arguments", –æ–Ω–∏ –Ω–µ –º–æ–≥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –º–∞—Å—Å–∏–≤—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –¥—Ä—É–≥–∏–º –∏–º–µ–Ω–µ–º
function makeGreeting3(){
  let myName = 'Alex';
  let selfArguments = arguments;
  function greeting(personName){
    return console.log(`Hello, ${personName}! My name's ${myName}.`);
  };
  return greeting;
}